// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider              = "zod-prisma"
  output                = "./zod"
  relationModel         = true
  modelCase             = "camelCase"
  modelSuffix           = "Schema"
  useDecimalJs          = true
  prismaJsonNullability = true
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_NON_POOLING")
}

model User {
  id             String           @id
  email          String           @unique
  hashedPassword String
  name           String?
  sessions       Session[]
  eventos        Evento[]
  gastos         Gasto[]
  deudas         Deuda[]
  pendientes     GastoPendiente[]
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Evento {
  id            String           @id @default(cuid())
  nombre        String
  descripcion   String?
  fechaInicio   DateTime?
  userId        String
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  gastos        Gasto[]
  participantes User[]
  pendientes    GastoPendiente[]
}

model Gasto {
  id            String   @id @default(cuid())
  monto         Float
  nombre        String
  fecha         DateTime
  evento        Evento   @relation(fields: [eventoId], references: [id], onDelete: Cascade)
  eventoId      String
  pagador       User     @relation(fields: [pagadorId], references: [id])
  pagadorId     String
  esDeudaPagada Boolean  @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deudas    Deuda[]
}

model Deuda {
  id       String @id @default(cuid())
  deudor   User   @relation(fields: [deudorId], references: [id])
  deudorId String
  gasto    Gasto  @relation(fields: [gastoId], references: [id], onDelete: Cascade)
  gastoId  String
  monto    Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model GastoPendiente {
  id            String  @id @default(cuid())
  nombre        String
  evento        Evento? @relation(fields: [eventoId], references: [id])
  eventoId      String?
  responsable   User?   @relation(fields: [responsableId], references: [id])
  responsableId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
